{"version":3,"file":"static/js/337.51eb6071.chunk.js","mappings":"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","sources":["components/BackToTop/BackToTop.styled.jsx","components/BackToTop/BackToTop.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movie.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\nposition: fixed;\n  @media screen and (min-width: 766px) {\n    height: 42px;\n    width: 42px;\n  }\n  right: 15px;\n  bottom: 30px;\n  height: 32px;\n  width: 32px;\n  padding: 5px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  animation: fadeIn 0.3s;\n  opacity: 0.5;\n  background: green;\n  border-radius: 4px;\n  border: 0;\n  z-index: 1000;\n  transition: opacity 0.4s, color ease-in-out 0.2s, background ease-in-out 0.2s;\n  display: ${({ isScrollButtonVisible }) =>\n  isScrollButtonVisible ? 'flex' : 'none'};\n\n  &:hover {\n    opacity: 1;\n  }\n\n  svg {\n    stroke: #ffffff;\n  }\n`; \n","import { useState, useEffect } from 'react';\nimport { Button } from './BackToTop.styled';\n\nconst BackToTopButton = () => {\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const checkScrollHeight = () => {\n      if (!showButton && window.pageYOffset > 400) {\n        setShowButton(true);\n      } else if (showButton && window.pageYOffset <= 400) {\n        setShowButton(false);\n      }\n    };\n    window.addEventListener('scroll', checkScrollHeight);\n    return () => {\n      window.removeEventListener('scroll', checkScrollHeight);\n    };\n  }, [showButton]);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <Button\n    type=\"button\"\n      aria-label=\"back to top\"\n      isScrollButtonVisible={showButton}\n      onClick={scrollToTop}\n    >\n      <svg\n        width={24}\n        height={24}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M12 19V5M5 12l7-7 7 7\" />\n      </svg>\n    </Button>\n  );\n};\n\nexport default BackToTopButton;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\ntext-align: center;\n\n  @media screen and (min-width: 320px) {\n    width: 320px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n","import { Wrapper } from './Container.styled';\nimport PropTypes from 'prop-types';\nconst Container = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nContainer.propTypes = {\n  children:PropTypes.any.isRequired,\n};\nexport default Container;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 25px;\n  @media screen and (min-width: 320px) {\n    gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    column-gap: 16px;\n    row-gap: 32px;\n  }\n`;\n\nexport const ListItem = styled.li`\nmin-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 32px) / 2);\n  }\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 2 * 16px) / 3);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  overflow: hidden;\n  cursor: pointer;\n  box-shadow: 0px 0px 10px rgba(255, 255, 255, 0);\n  transition: box-shadow 0.3s ease-in-out;\n  position: relative;\n\n  img {\n    display: block;\n    width: 280px;\n    height: 398px;\n    margin-bottom: 8px;\n    transition: filter 0.3s ease-in-out, opacity 0.3s ease-in-out;\n\n    @media screen and (min-width: 768px) and (max-width: 1279px) {\n      width: 336px;\n      height: 455px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 395px;\n      height: 574px;\n      margin-bottom: 12px;\n    }\n  }\n\nspan {\n    display: block;\n    position: absolute;\n    top: 40%;\n    right: 50%;\n    transform: translate(-40%, -50%);\n    visibility: hidden;\n    color: black;\n    font-weight: bold;\n    transition: visibility 0s ease-in-out;\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.8);\n\n    img {\n      filter: blur(3px);\n      opacity: 0.7;\n      transition: opacity 0.3s ease-in-out;\n    }\n\n    span {\n      visibility: visible;\n      transform: translate(50%, 50%);\n      transition: visibility 0s ease-in-out 0.3s;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 10px;\n  text-decoration: none;\n  color: black;\n`;\n\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, Wrapper, StyledLink, Text } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ poster_path, title, id }) => (\n        <ListItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <Wrapper>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://dummyimage.com/500x400/ff6b08/fff.jpg&text=Opps,+no+image...'\n                }\n                alt={title}\n              />\n              <span>Click to see more info</span>\n              <Text>{title}</Text>\n            </Wrapper>\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 5px;\n  padding: 0;\n  margin-bottom: 30px;\n  color: blue;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n\n.previous {\n    padding: 5px 10px;\n    @media screen and (min-width: 768px) {\n      padding: 10px 15px;\n    }\n\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .next {\n    padding: 5px 10px;\n    @media screen and (min-width: 768px) {\n      padding: 10px 15px;\n    }\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .page {\n    padding: 5px 10px;\n    @media screen and (min-width: 768px) {\n      padding: 10px 15px;\n    }\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .disabled {\n    color: grey;\n  }\n  .active {\n    background-color: green;\n    color: white;\n  }\n`;\n\n","import { StyledReactPaginate } from './Pagination.styled';\n\nimport PropTypes from 'prop-types';\nconst Pagination = ({ pageCount, setSearchParams, params, currentPage }) => {\n  const handlePageChange = e => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <StyledReactPaginate\n    previousLabel=\"<\"\n      nextLabel=\">\"\n      breakLabel=\"...\"\n      breakClassName=\"break-me\"\n      pageCount={pageCount}\n      onPageChange={handlePageChange}\n      forcePage={currentPage}\n      renderOnZeroPageCount={null}\n      containerClassName=\"pagination\"\n      pageClassName=\"page\"\n      activeClassName=\"active\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={1}\n      onPageActive={window.scroll({ top: 0, behavior: 'smooth' })}\n    />\n  );\n};\n\nPagination.propTypes = {\n  pageCount: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n\n\n\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 30px;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  border-radius: 8px;\n  overflow: hidden;\n  font-size: 20px;\n  border: 2px solid blue;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 48px;\n  padding-left: 20px;\n  font-size: 20px;\n  border: none;\n  padding-top: 7px;\n  padding-bottom: 10px;\n\n  ::placeholder {\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  padding: 5px;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: white;\n  cursor: pointer;\n\n  svg {\n    fill: black;\n    font-size: 24px;\n  }\n`;\n\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import {\n  SearchForm,\n  SearchInput,\n  SearchButton,\n  SearchButtonLabel,\n} from './Searchbar.styled';\n\nimport { HiMagnifyingGlass } from 'react-icons/hi2';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n<SearchForm onSubmit = {onSubmit}>\n  <SearchButton type=\"submit\" aria-label=\"search\">\n    <HiMagnifyingGlass />\n    <SearchButtonLabel>Search</SearchButtonLabel>\n  </SearchButton>\n      \n      <SearchInput\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n</SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Pagination from 'components/Pagination/Pagination';\nimport Loader from 'components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchMoviesByName } from 'services/movie-api';\nimport Container from 'components/Container/Container';\nimport BackToTopButton from 'components/BackToTop/BackToTop';\n\nconst Movies = () => {\n  const [totalPages, setTotalPages] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalResults, setTotalResults] = useState(0);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({\n    page: 1,\n    query: '',\n  });\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]);\n  const page = Number(params.page || 1);\n  const { query } = params;\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const loadMoviesByQuery = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { results, total_pages, total_results } = await fetchMoviesByName(\n          page,\n          query\n        );\n        setMovies(results);\n        setTotalPages(total_pages);\n        setTotalResults(total_results);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadMoviesByQuery();\n  }, [page, query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value.trim();\n    if (!query) {\n      toast.error('Please type something');\n      return;\n    }\n    setSearchParams({ query: query, page: 1 });\n    e.target.reset();\n  };\n\n  return (\n    <main>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <Container>\n          <Searchbar onSubmit={handleSubmit} />\n          {isLoading && <Loader />}\n          {totalResults === 0 && query && !error ? (\n            <h2>No results found</h2>\n          ) : (\n            <>\n              <MoviesList movies={movies} />\n              {totalPages !== 0 && (\n                <Pagination\n                  pageCount={totalPages}\n                  setSearchParams={setSearchParams}\n                  params={params}\n                  currentPage={page - 1}\n                />\n              )}\n            </>\n          )}\n          <Toaster />\n          <BackToTopButton />\n        </Container>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4d14703d6a351da27d4ddf18e62ab229';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '4d14703d6a351da27d4ddf18e62ab229',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}"],"names":["Button","styled","isScrollButtonVisible","useState","showButton","setShowButton","useEffect","checkScrollHeight","window","pageYOffset","addEventListener","removeEventListener","type","onClick","scrollTo","top","behavior","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Wrapper","children","StyledLink","Link","List","ListItem","Text","movies","location","useLocation","map","poster_path","title","id","to","state","from","src","alt","StyledReactPaginate","ReactPaginate","pageCount","setSearchParams","params","currentPage","previousLabel","nextLabel","breakLabel","breakClassName","onPageChange","e","page","selected","forcePage","renderOnZeroPageCount","containerClassName","pageClassName","activeClassName","pageRangeDisplayed","marginPagesDisplayed","onPageActive","scroll","SearchForm","SearchInput","SearchButton","SearchButtonLabel","onSubmit","name","autoComplete","autoFocus","placeholder","totalPages","setTotalPages","setMovies","isLoading","setIsLoading","totalResults","setTotalResults","error","setError","useSearchParams","query","searchParams","useMemo","Object","fromEntries","Number","loadMoviesByQuery","fetchMoviesByName","results","total_pages","total_results","Container","preventDefault","target","elements","value","trim","reset","toast","Loader","MoviesList","Pagination","BackToTop","BASE_URL","API_KEY","fetchTrendingMovies","url","axios","response","data","console","URLSearchParams","api_key","include_adult","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}