{"version":3,"file":"static/js/76.be441934.chunk.js","mappings":"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","sources":["components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Cast.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-bottom: 25px;\n  height: 300px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: blue;\n    border-radius: 10px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);\n  }\n\n  @media screen and (min-width: 320px) {\n    gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    gap: 49px;\n  }\n  @media screen and (min-width: 1024px) {\n    column-gap: 48px;\n    row-gap: 40px;\n  }\n`;\n\nexport const ListItem = styled.li`\nwidth: calc((100% - 20px) / 2);\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 25px) / 5);\n  }\n  @media screen and (min-width: 1024px) {\n    width: calc((100% - 48px) / 6);\n  }\n`;\n\nexport const CharacterImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 285px;\n`;\n\nexport const ActorInfo = styled.div`\n  padding: 10px;\n  text-align: center;\n`;\n\nexport const Character = styled.p`\ncolor: blue;\n  font-size: large;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport {\n  ActorInfo,\n  CharacterImage,\n  List,\n  ListItem,\n  Character,\n} from './CastList.styled';\nconst CastList = ({ cast }) => {\n  return (\n    <List>\n      {cast.map(({ id, character, name, profile_path }) => (\n        <ListItem key={id}>\n          <CharacterImage\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                : 'https://dummyimage.com/500x400/ff6b08/fff.jpg&text=Opps,+no+image...'\n            }\n            alt={name}\n            width=\"150\"\n            height=\"200\"\n          />\n          <ActorInfo>\n            <p>\n              <span>{name}</span>\n            </p>\n            <Character>\n              <span>{character}</span>\n            </Character>\n          </ActorInfo>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default CastList;\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport { fetchMovieCast } from 'services/movie-api';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader/Loader';\nimport CastList from './CastList/CastList';\n\nconst Cast = () => {\n  const { Id } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { cast } = await fetchMovieCast(Id);\n        setMovieCast(cast);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadMovieCast();\n  }, [Id]);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          {isLoading && <Loader />}\n          {movieCast?.length === 0 && !error ? (\n            <p>We didn't find info about cast</p>\n          ) : (\n            <CastList cast={movieCast} />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4d14703d6a351da27d4ddf18e62ab229';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '4d14703d6a351da27d4ddf18e62ab229',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}"],"names":["List","styled","ListItem","CharacterImage","ActorInfo","Character","cast","map","id","character","name","profile_path","src","alt","width","height","Id","useParams","useState","movieCast","setMovieCast","isLoading","setIsLoading","error","setError","useEffect","loadMovieCast","fetchMovieCast","Loader","length","BASE_URL","API_KEY","fetchTrendingMovies","page","url","axios","response","data","console","fetchMoviesByName","query","searchParams","URLSearchParams","api_key","include_adult","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}