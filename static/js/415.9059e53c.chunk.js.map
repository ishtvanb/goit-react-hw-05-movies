{"version":3,"file":"static/js/415.9059e53c.chunk.js","mappings":"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","sources":["components/BackToTop/BackToTop.styled.jsx","components/BackToTop/BackToTop.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\nposition: fixed;\n  @media screen and (min-width: 766px) {\n    height: 42px;\n    width: 42px;\n  }\n  right: 15px;\n  bottom: 30px;\n  height: 32px;\n  width: 32px;\n  padding: 5px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  animation: fadeIn 0.3s;\n  opacity: 0.5;\n  background: green;\n  border-radius: 4px;\n  border: 0;\n  z-index: 1000;\n  transition: opacity 0.4s, color ease-in-out 0.2s, background ease-in-out 0.2s;\n  display: ${({ isScrollButtonVisible }) =>\n  isScrollButtonVisible ? 'flex' : 'none'};\n\n  &:hover {\n    opacity: 1;\n  }\n\n  svg {\n    stroke: #ffffff;\n  }\n`; \n","import { useState, useEffect } from 'react';\nimport { Button } from './BackToTop.styled';\n\nconst BackToTopButton = () => {\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const checkScrollHeight = () => {\n      if (!showButton && window.pageYOffset > 400) {\n        setShowButton(true);\n      } else if (showButton && window.pageYOffset <= 400) {\n        setShowButton(false);\n      }\n    };\n    window.addEventListener('scroll', checkScrollHeight);\n    return () => {\n      window.removeEventListener('scroll', checkScrollHeight);\n    };\n  }, [showButton]);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <Button\n    type=\"button\"\n      aria-label=\"back to top\"\n      isScrollButtonVisible={showButton}\n      onClick={scrollToTop}\n    >\n      <svg\n        width={24}\n        height={24}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M12 19V5M5 12l7-7 7 7\" />\n      </svg>\n    </Button>\n  );\n};\n\nexport default BackToTopButton;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\ntext-align: center;\n\n  @media screen and (min-width: 320px) {\n    width: 320px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n","import { Wrapper } from './Container.styled';\nimport PropTypes from 'prop-types';\nconst Container = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nContainer.propTypes = {\n  children:PropTypes.any.isRequired,\n};\nexport default Container;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 25px;\n  @media screen and (min-width: 320px) {\n    gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    column-gap: 16px;\n    row-gap: 32px;\n  }\n`;\n\nexport const ListItem = styled.li`\nmin-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 32px) / 2);\n  }\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 2 * 16px) / 3);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  overflow: hidden;\n  cursor: pointer;\n  box-shadow: 0px 0px 10px rgba(255, 255, 255, 0);\n  transition: box-shadow 0.3s ease-in-out;\n  position: relative;\n\n  img {\n    display: block;\n    width: 280px;\n    height: 398px;\n    margin-bottom: 8px;\n    transition: filter 0.3s ease-in-out, opacity 0.3s ease-in-out;\n\n    @media screen and (min-width: 768px) and (max-width: 1279px) {\n      width: 336px;\n      height: 455px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 395px;\n      height: 574px;\n      margin-bottom: 12px;\n    }\n  }\n\nspan {\n    display: block;\n    position: absolute;\n    top: 40%;\n    right: 50%;\n    transform: translate(-40%, -50%);\n    visibility: hidden;\n    color: black;\n    font-weight: bold;\n    transition: visibility 0s ease-in-out;\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.8);\n\n    img {\n      filter: blur(3px);\n      opacity: 0.7;\n      transition: opacity 0.3s ease-in-out;\n    }\n\n    span {\n      visibility: visible;\n      transform: translate(50%, 50%);\n      transition: visibility 0s ease-in-out 0.3s;\n    }\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 10px;\n  text-decoration: none;\n  color: black;\n`;\n\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, Wrapper, StyledLink, Text } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ poster_path, title, id }) => (\n        <ListItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <Wrapper>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://dummyimage.com/500x400/ff6b08/fff.jpg&text=Opps,+no+image...'\n                }\n                alt={title}\n              />\n              <span>Click to see more info</span>\n              <Text>{title}</Text>\n            </Wrapper>\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 5px;\n  padding: 0;\n  margin-bottom: 30px;\n  color: blue;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n\n.previous {\n    padding: 5px 10px;\n    @media screen and (min-width: 768px) {\n      padding: 10px 15px;\n    }\n\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .next {\n    padding: 5px 10px;\n    @media screen and (min-width: 768px) {\n      padding: 10px 15px;\n    }\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .page {\n    padding: 5px 10px;\n    @media screen and (min-width: 768px) {\n      padding: 10px 15px;\n    }\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .disabled {\n    color: grey;\n  }\n  .active {\n    background-color: green;\n    color: white;\n  }\n`;\n\n","import { StyledReactPaginate } from './Pagination.styled';\n\nimport PropTypes from 'prop-types';\nconst Pagination = ({ pageCount, setSearchParams, params, currentPage }) => {\n  const handlePageChange = e => {\n    setSearchParams({ ...params, page: e.selected + 1 });\n  };\n\n  return (\n    <StyledReactPaginate\n    previousLabel=\"<\"\n      nextLabel=\">\"\n      breakLabel=\"...\"\n      breakClassName=\"break-me\"\n      pageCount={pageCount}\n      onPageChange={handlePageChange}\n      forcePage={currentPage}\n      renderOnZeroPageCount={null}\n      containerClassName=\"pagination\"\n      pageClassName=\"page\"\n      activeClassName=\"active\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={1}\n      onPageActive={window.scroll({ top: 0, behavior: 'smooth' })}\n    />\n  );\n};\n\nPagination.propTypes = {\n  pageCount: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n\n\n\n","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Pagination from 'components/Pagination/Pagination';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchTrendingMovies } from 'services/movie-api';\nimport Loader from 'components/Loader/Loader';\nimport Container from 'components/Container/Container';\nimport BackToTopButton from 'components/BackToTop/BackToTop';\n\nconst Home = () => {\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { results, total_pages } = await fetchTrendingMovies(page);\n        setMovies(results);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadMovies();\n  }, [page]);\n\n  return (\n    <main>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n          <Container>\n            <h1 style={{ marginBottom: '20px' }}>Trending movies</h1>\n          {isLoading && <Loader />}\n          <MoviesList movies={movies} />\n          {totalPages !== 0 && (\n            <Pagination\n              pageCount={totalPages}\n              setSearchParams={setSearchParams}\n              params={params}\n              currentPage={page - 1}\n            />\n          )}\n          <BackToTopButton />\n          </Container>\n      )}\n    </main>\n  );\n};\n\nexport default Home;","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4d14703d6a351da27d4ddf18e62ab229';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '4d14703d6a351da27d4ddf18e62ab229',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}"],"names":["Button","styled","isScrollButtonVisible","useState","showButton","setShowButton","useEffect","checkScrollHeight","window","pageYOffset","addEventListener","removeEventListener","type","onClick","scrollTo","top","behavior","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","Wrapper","children","StyledLink","Link","List","ListItem","Text","movies","location","useLocation","map","poster_path","title","id","to","state","from","src","alt","StyledReactPaginate","ReactPaginate","pageCount","setSearchParams","params","currentPage","previousLabel","nextLabel","breakLabel","breakClassName","onPageChange","e","page","selected","forcePage","renderOnZeroPageCount","containerClassName","pageClassName","activeClassName","pageRangeDisplayed","marginPagesDisplayed","onPageActive","scroll","totalPages","setTotalPages","isLoading","setIsLoading","setMovies","error","setError","useSearchParams","searchParams","useMemo","Object","fromEntries","Number","loadMovies","fetchTrendingMovies","results","total_pages","style","marginBottom","BASE_URL","API_KEY","url","axios","response","data","console","fetchMoviesByName","query","URLSearchParams","api_key","include_adult","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}